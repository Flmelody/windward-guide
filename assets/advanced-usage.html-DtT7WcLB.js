import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as e}from"./app-BWoNCIuP.js";const t={},c=e(`<div class="hint-container info"><p class="hint-container-title">this follows on from the basic usage above</p><p>Basic usage configuration registration is omitted.</p></div><h2 id="writing-codecs" tabindex="-1"><a class="header-anchor" href="#writing-codecs"><span>Writing codecs</span></a></h2><p>The following is an example of a decoder</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@ChannelHandler.Sharable</span>
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Decoder</span> <span class="token keyword">extends</span> <span class="token class-name">WebSocketDecoder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> msg<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> out<span class="token punctuation">)</span>
          <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token keyword">instanceof</span> <span class="token class-name">WebSocketFrame</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Example of parsing a text frame</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token keyword">instanceof</span> <span class="token class-name">TextWebSocketFrame</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Decoded my msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TextWebSocketFrame</span><span class="token punctuation">)</span> msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="writing-a-message-parser" tabindex="-1"><a class="header-anchor" href="#writing-a-message-parser"><span>Writing a message parser</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@ChannelHandler.Sharable</span>
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Parser</span> <span class="token keyword">extends</span> <span class="token class-name">WebSocketParser</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">channelRead0</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> msg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received My msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registering-codecs-and-message-parsers" tabindex="-1"><a class="header-anchor" href="#registering-codecs-and-message-parsers"><span>Registering codecs and message parsers</span></a></h2><div class="hint-container important"><p class="hint-container-title">have a try</p><p>Advanced usage is for technicians with some ability to implement custom protocols using multiple custom codecs and message parsers with this plugin.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">ExtensionalWebSocketPlugin</span> extensionalWebSocketPlugin <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">ExtensionalWebSocketPlugin</span><span class="token punctuation">(</span>
            <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
windward<span class="token punctuation">.</span><span class="token function">registerPlugin</span><span class="token punctuation">(</span><span class="token class-name">PluginSlot</span><span class="token punctuation">.</span><span class="token constant">WEBSOCKET</span><span class="token punctuation">,</span> extensionalWebSocketPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,8),p=[c];function o(i,l){return s(),a("div",null,p)}const r=n(t,[["render",o],["__file","advanced-usage.html.vue"]]),k=JSON.parse('{"path":"/websocket/advanced-usage.html","title":"Advanced Usage","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Advanced Usage","description":"Advanced Usage"},"headers":[{"level":2,"title":"Writing codecs","slug":"writing-codecs","link":"#writing-codecs","children":[]},{"level":2,"title":"Writing a message parser","slug":"writing-a-message-parser","link":"#writing-a-message-parser","children":[]},{"level":2,"title":"Registering codecs and message parsers","slug":"registering-codecs-and-message-parsers","link":"#registering-codecs-and-message-parsers","children":[]}],"git":{"createdTime":1705038450000,"updatedTime":1711462476000,"contributors":[{"name":"esotericman","email":"justmysteriousman@163.com","commits":6}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"websocket/advanced-usage.md","localizedDate":"2024年1月12日"}');export{r as comp,k as data};
