import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-BWoNCIuP.js";const e={},o=t(`<div class="hint-container info"><p class="hint-container-title">Info</p><p>Static resources should in <code>classpath:/static</code> folder or its subfolder, of course, you can custom it yourself.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Default is \`/static\`</span>
<span class="token class-name">Windward</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">,</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/templates&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;your static resource locations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><h1 id="just-register-it" tabindex="-1"><a class="header-anchor" href="#just-register-it"><span>Just register it!</span></a></h1><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>windward<span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">&quot;/**.js&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/**.css&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/**.jpeg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/**.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you prefer to host all, register it like below.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>windward<span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>For routes registered with <code>windward.resource</code>, static resources should be placed in the global default static resource directory, which is unique. If you have multiple different static resource directories, try the following writeup.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>windward
    <span class="token punctuation">.</span><span class="token function">resources</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/static/**.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/static/**.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/static/**.html&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">resources</span><span class="token punctuation">(</span><span class="token string">&quot;/vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/vue/**.html&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">resources</span><span class="token punctuation">(</span><span class="token string">&quot;/home&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/home/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Static resource hosting, in essence, is also a routing strategy, so we need to be extra careful with wildcard writing, e.g. <code>/**</code>.</p><div class="hint-container caution"><p class="hint-container-title">Caution</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// This writeup is not recommended and creates mixed routes</span>
windward
    <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">&quot;/v1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
        <span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span>
        simpleWindwardContext <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// codes</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ‚ùå
<span class="token comment">// Use this writing style</span>
<span class="token comment">// We should always separate static resource routing from regular interface functions to avoid unexpected situations</span>
windward
    <span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">&quot;/v1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
        <span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span>
        simpleWindwardContext <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// codes</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//üëàüëàThis is important here, it means that the previous routing group is already registered</span>
    <span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ‚úÖ
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,8),i=[o];function c(p,u){return s(),a("div",null,i)}const d=n(e,[["render",c],["__file","static-host.html.vue"]]),v=JSON.parse('{"path":"/resource/static-host.html","title":"Host Static Resource","lang":"en-US","frontmatter":{"lang":"en-US","title":"Host Static Resource","description":"Host Static Resource"},"headers":[],"git":{"createdTime":1706112260000,"updatedTime":1709950166000,"contributors":[{"name":"esotericman","email":"justmysteriousman@163.com","commits":2}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"resource/static-host.md","localizedDate":"January 24, 2024"}');export{d as comp,v as data};
